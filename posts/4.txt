2:I[8523,[],""]
3:I[8009,[],""]
4:I[6282,["282","static/chunks/282-676446d00e1f0e91.js","517","static/chunks/app/posts/layout-84209971c6e87e3f.js"],""]
0:["UzuRu1J7jfQO6TjMKAJJn",[[["",{"children":["posts",{"children":["4",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",{"children":["posts",{"children":["4",{"children":["__PAGE__",{},[["$L1",[["$","h1",null,{"children":"오랜 시간이 걸리는 API를 처리하는 가장 간단한 방법"}],"\n",["$","p",null,{"children":"API 개발하다 보면 처리 시간이 오래 걸리는 엔드포인트를 만나게 됩니다. 데이터 크기가 크거나, 여러 시스템이 얽혀있거나, 아니면 그냥 느린 외부 API를 호출해야 할 때도 있습니다."}],"\n",["$","p",null,{"children":"문제는 이런 느린 API가 서비스 전체 성능에 영향을 준다는 거예요. 사용자는 마냥 기다리지 않습니다. 스피너가 빙글빙글 돌아가는 동안 다들 뒤로가기를 누르고 있겠죠."}],"\n",["$","p",null,{"children":"이런 상황에서 우리가 할 수 있는 간단한 해결책을 정리해봤습니다."}],"\n",["$","h2",null,{"children":"전체적인 구조"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"클라이언트가 요청을 보내면 서버에서 작업을 시작함과 동시에 202 Accepted 를 반환한다."}],"\n",["$","li",null,{"children":"클라이언트에서는 상태를 확인할 수 있는 endpoint를 통해 상태를 주기적으로 확인하고, 클라이언트를 업데이트한다. (polling 방식)"}],"\n"]}],"\n",["$","p",null,{"children":"아래에서는 비디오 업로드 (업로드 후 최적화) 를 예로 코드를 작성해보겠습니다."}],"\n",["$","h2",null,{"children":"서버 측 코드"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"const progressMap = {}\n\nasync function createVideo ({ name }) {\n    return await db.video.insertOne({ name })\n}\n\nasync function processingVideoResolution ({ id }) {\n    for (let i = 0; i < 100; ++i) {\n        sleep(1000)\n        progressMap[id] = (progressMap[id] ?? 0) + 1\n    }\n}\n\nrouter.post('/video', async (req, res) => {\n    const video = await createVideo(req.body)\n    processingVideoResolution(video).catch(console.error) // 비동기 작업을 기다리지 않음\n    res.status(202).json(video)\n})\n\nrouter.get('/status/:id', async (req, res) => {\n    res.json({ progress: progressMap[req.params.id] })\n})\n"}]}],"\n",["$","p",null,{"children":["서버에서는 ",["$","code",null,{"children":"POST /video"}]," 요청이 들어오는 즉시 202를 반환하고, 백그라운드에서 비디오 해상도 처리를 진행합니다.\n백그라운드에서 처리가 진행되면서, progressMap에 video의 진행도를 저장하는데 이 진행도는 ",["$","code",null,{"children":"GET /status/:id"}]," 엔드포인트를 통해 확인할 수 있습니다."]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"⚠️ 편의를 위해 progressMap을 변수로 만들었지만, 실제 프로덕션 환경에서는 Redis를 사용하거나 진행도를 DB에 넣는 등의 고민이 필요합니다."}],"\n"]}],"\n",["$","h2",null,{"children":"클라이언트 측 코드"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"const { data: video } = await axios.post('/video')\n\nconst interval = setInterval(async () => {\n    const { data } = await axios.get(`/status/${video.id}`)\n    const { progress } = data\n    setProgress(progress)\n\n    if (progress === 100) clearInterval(interval)\n}, 1000)\n"}]}],"\n",["$","p",null,{"children":"클라이언트에서는 video 생성 API를 호출, interval을 통해 주기적으로 진행도를 갱신합니다."}],"\n",["$","h2",null,{"children":"결론"}],"\n",["$","p",null,{"children":"긴 시간이 필요한 API를 처리하는 가장 간단한 방법을 알아보았습니다. 202 응답 코드와 폴링을 활용하면, 복잡한 웹소켓이나 메시징 시스템 없이도 비동기 작업을 깔끔하게 처리할 수 있습니다."}],"\n",["$","p",null,{"children":"물론 이 방식에도 한계가 있습니다. 주기적인 폴링은 서버에 불필요한 부하를 줄 수 있고, 실시간성이 떨어질 수 있죠. 규모가 커진다면 웹소켓이나 메시지 큐 같은 더 견고한 해결책을 고려해야 할 수도 있습니다."}],"\n",["$","p",null,{"children":"하지만 작은 규모의 프로젝트나 빠른 프로토타입이 필요한 상황이라면, 이런 간단한 방식으로도 충분히 실용적인 해결이 가능합니다. 때로는 단순한 해결책이 가장 좋은 해결책이 되기도 하니까요."}]],null],null],null]},[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children","4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,["$","article",null,{"className":"prose container min-h-screen mx-auto p-8","children":[["$","$L4",null,{"href":"/","className":"text-xs","children":["<"," 돌아가기"]}],["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/1352877716939c65.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"kr","children":["$","body",null,{"className":"font-wanted","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]],null],null],["$L5",null]]]]
5:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"최영진의 개발 노트"}],["$","meta","3",{"name":"description","content":"웹 개발의 A to Z를 탐구하는 기술 블로그. 실전에서 마주한 문제들과 그 해결 과정을 공유합니다."}],["$","meta","4",{"name":"google-site-verification","content":"OwHKPNKdBwgpiIeHCPodU73heHdBhAoM7A9AphpQxbI"}],["$","meta","5",{"property":"og:title","content":"최영진의 개발 노트"}],["$","meta","6",{"property":"og:description","content":"웹 개발의 A to Z를 탐구하는 기술 블로그. 실전에서 마주한 문제들과 그 해결 과정을 공유합니다."}],["$","meta","7",{"name":"twitter:card","content":"summary"}],["$","meta","8",{"name":"twitter:title","content":"최영진의 개발 노트"}],["$","meta","9",{"name":"twitter:description","content":"웹 개발의 A to Z를 탐구하는 기술 블로그. 실전에서 마주한 문제들과 그 해결 과정을 공유합니다."}]]
1:null
